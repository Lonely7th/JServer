swagger: "2.0"
info:
  title: beego Test API
  description: beego has a very cool tools to autogenerate documents for your API
  version: 1.0.0
  termsOfService: http://beego.me/
  contact:
    email: astaxie@gmail.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
basePath: /api
paths:
  /object/:
    get:
      tags:
      - object
      description: get all objects
      operationId: ObjectController.GetAll
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Object'
        "403":
          description: :objectId is empty
    post:
      tags:
      - object
      description: create object
      operationId: ObjectController.Create
      parameters:
      - in: body
        name: body
        description: The object content
        required: true
        schema:
          $ref: '#/definitions/models.Object'
      responses:
        "200":
          description: '{string} models.Object.Id'
        "403":
          description: body is empty
  /object/{objectId}:
    get:
      tags:
      - object
      description: find object by objectid
      operationId: ObjectController.Get
      parameters:
      - in: path
        name: objectId
        description: the objectid you want to get
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Object'
        "403":
          description: :objectId is empty
    put:
      tags:
      - object
      description: update the object
      operationId: ObjectController.Update
      parameters:
      - in: path
        name: objectId
        description: The objectid you want to update
        required: true
        type: string
      - in: body
        name: body
        description: The body
        required: true
        schema:
          $ref: '#/definitions/models.Object'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Object'
        "403":
          description: :objectId is empty
    delete:
      tags:
      - object
      description: delete the object
      operationId: ObjectController.Delete
      parameters:
      - in: path
        name: objectId
        description: The objectId you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: objectId is empty
  /v1/changeHead:
    post:
      tags:
      - v2
      description: 修改用户头像
      operationId: UserController.ChangeHead
      parameters:
      - in: query
        name: user_no
        description: 用户Id
        required: true
        type: string
      - in: query
        name: src
        description: 图片内容base64
        required: true
        type: string
      responses:
        "200":
          description: '{string} success'
  /v1/changeInfo:
    post:
      tags:
      - v2
      description: 修改用户信息
      operationId: UserController.ChangeInfo
      parameters:
      - in: query
        name: user_no
        description: 用户Id
        required: true
        type: string
      - in: query
        name: content
        description: 修改后的内容
        required: true
        type: string
      - in: query
        name: ctype
        description: 待修改的类型(0：用户昵称 1：所在城市)
        required: true
        type: integer
        format: int64
      responses:
        "200":
          description: '{string} success'
  /v1/login:
    post:
      tags:
      - v2
      description: Logs user into the system
      operationId: UserController.Login
      parameters:
      - in: query
        name: phoneNumber
        description: The phoneNumber for login
        required: true
        type: string
      responses:
        "200":
          description: '{string} login success'
        "403":
          description: user not exist
  /v1/logout:
    post:
      tags:
      - v2
      description: Logs out current logged in user session
      operationId: UserController.logout
      responses:
        "200":
          description: '{string} logout success'
  /v2/changeHead:
    post:
      tags:
      - v2
      description: 修改用户头像
      operationId: UserController.ChangeHead
      parameters:
      - in: query
        name: user_no
        description: 用户Id
        required: true
        type: string
      - in: query
        name: src
        description: 图片内容base64
        required: true
        type: string
      responses:
        "200":
          description: '{string} success'
  /v2/changeInfo:
    post:
      tags:
      - v2
      description: 修改用户信息
      operationId: UserController.ChangeInfo
      parameters:
      - in: query
        name: user_no
        description: 用户Id
        required: true
        type: string
      - in: query
        name: content
        description: 修改后的内容
        required: true
        type: string
      - in: query
        name: ctype
        description: 待修改的类型(0：用户昵称 1：所在城市)
        required: true
        type: integer
        format: int64
      responses:
        "200":
          description: '{string} success'
  /v2/login:
    post:
      tags:
      - v2
      description: Logs user into the system
      operationId: UserController.Login
      parameters:
      - in: query
        name: phoneNumber
        description: The phoneNumber for login
        required: true
        type: string
      responses:
        "200":
          description: '{string} login success'
        "403":
          description: user not exist
  /v2/logout:
    post:
      tags:
      - v2
      description: Logs out current logged in user session
      operationId: UserController.logout
      responses:
        "200":
          description: '{string} logout success'
definitions:
  models.Object:
    title: Object
    type: object
    properties:
      ObjectId:
        type: string
      PlayerName:
        type: string
      Score:
        type: integer
        format: int64
tags:
- name: object
  description: |
    Operations about object
- name: v1
  description: |
    Operations about Users
- name: v2
  description: |
    Operations about Users
